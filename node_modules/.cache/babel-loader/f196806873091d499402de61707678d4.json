{"ast":null,"code":"var _jsxFileName = \"/Users/hafizewp/Documents/Magang/Belajar React/mass-index-calculator/src/components/BmiCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport BmiForm from './BmiForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BmiCalculator = props => {\n  _s();\n\n  const {\n    getBmiValue\n  } = props;\n  const [count, setCount] = useState({\n    heightCount: '0',\n    weightCount: '0'\n  });\n  const {\n    heightCount,\n    weightCount\n  } = count;\n\n  const onChangeInput = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCount(prevState => ({ ...prevState,\n      [name]: value\n    }));\n  };\n\n  const resetForm = e => {\n    e.preventDefault();\n    setCount({\n      heightCount: '0',\n      weightCount: '0'\n    });\n    getBmiValue(0);\n  };\n\n  const metricBmi = (height, weight) => {\n    if (height > 0 && weight > 0) {\n      const bmi = weight / height / height * 10000; // console.log(bmi)\n\n      getBmiValue(Math.round(bmi));\n    }\n  };\n\n  useEffect(() => {\n    // akan menghitung bmi dari tinggi dan berat melalui method\n    // metricBmi(123, 123)\n    metricBmi(heightCount, weightCount);\n  }, [heightCount, weightCount]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-body\",\n    children: [/*#__PURE__*/_jsxDEV(BmiForm, {\n      title: `Height (cm)`,\n      type: \"number\",\n      name: \"heightCount\",\n      value: heightCount,\n      onChange: onChangeInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BmiForm, {\n      title: `Weight (kg)`,\n      type: \"number\",\n      name: \"weightCount\",\n      value: weightCount,\n      onChange: onChangeInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetForm,\n      className: \"btn btn-sm btn-primary\",\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BmiCalculator, \"6lmrixI20ZbcXvC4lkjrDKULkdQ=\");\n\n_c = BmiCalculator;\nexport default BmiCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"BmiCalculator\");","map":{"version":3,"sources":["/Users/hafizewp/Documents/Magang/Belajar React/mass-index-calculator/src/components/BmiCalculator.js"],"names":["React","useEffect","useState","BmiForm","BmiCalculator","props","getBmiValue","count","setCount","heightCount","weightCount","onChangeInput","e","name","value","target","prevState","resetForm","preventDefault","metricBmi","height","weight","bmi","Math","round"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,EAA4BC,QAA5B,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAACC,IAAAA;AAAD,MAAgBD,KAAtB;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC;AAC/BO,IAAAA,WAAW,EAAE,GADkB;AAE/BC,IAAAA,WAAW,EAAE;AAFkB,GAAD,CAAlC;AAKA,QAAM;AAAED,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA+BH,KAArC;;AAEA,QAAMI,aAAa,GAAIC,CAAD,IAAO;AACzB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAP,IAAAA,QAAQ,CAACQ,SAAS,KAAK,EACnB,GAAGA,SADgB;AAEnB,OAACH,IAAD,GAAQC;AAFW,KAAL,CAAV,CAAR;AAIH,GAND;;AAQA,QAAMG,SAAS,GAAIL,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACM,cAAF;AACAV,IAAAA,QAAQ,CAAC;AACLC,MAAAA,WAAW,EAAE,GADR;AAELC,MAAAA,WAAW,EAAE;AAFR,KAAD,CAAR;AAIAJ,IAAAA,WAAW,CAAC,CAAD,CAAX;AACH,GAPD;;AASA,QAAMa,SAAS,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;AAClC,QAAGD,MAAM,GAAG,CAAT,IAAcC,MAAM,GAAG,CAA1B,EAA6B;AACzB,YAAMC,GAAG,GAAID,MAAM,GAAGD,MAAT,GAAkBA,MAAnB,GAA6B,KAAzC,CADyB,CAEzB;;AACAd,MAAAA,WAAW,CAACiB,IAAI,CAACC,KAAL,CAAWF,GAAX,CAAD,CAAX;AACH;AACJ,GAND;;AAQArB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACAkB,IAAAA,SAAS,CAACV,WAAD,EAAcC,WAAd,CAAT;AACH,GAJQ,EAIN,CAACD,WAAD,EAAcC,WAAd,CAJM,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,OAAD;AACI,MAAA,KAAK,EAAG,aADZ;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,IAAI,EAAC,aAHT;AAII,MAAA,KAAK,EAAED,WAJX;AAKI,MAAA,QAAQ,EAAEE;AALd;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI,QAAC,OAAD;AACI,MAAA,KAAK,EAAG,aADZ;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,IAAI,EAAC,aAHT;AAII,MAAA,KAAK,EAAED,WAJX;AAKI,MAAA,QAAQ,EAAEC;AALd;AAAA;AAAA;AAAA;AAAA,YARJ,eAeI;AACI,MAAA,OAAO,EAAEM,SADb;AAEI,MAAA,SAAS,EAAC,wBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CA7DD;;GAAMb,a;;KAAAA,a;AA+DN,eAAeA,aAAf","sourcesContent":["import React,  { useEffect, useState }  from 'react'\nimport BmiForm from './BmiForm'\n\nconst BmiCalculator = (props) => {\n    const {getBmiValue} = props\n    const [count, setCount] = useState({\n        heightCount: '0',\n        weightCount: '0'\n    })\n\n    const { heightCount, weightCount } = count\n\n    const onChangeInput = (e) => {\n        const { name, value } = e.target\n        setCount(prevState => ({\n            ...prevState,\n            [name]: value\n        }))\n    }\n\n    const resetForm = (e) => {\n        e.preventDefault()\n        setCount({\n            heightCount: '0',\n            weightCount: '0'\n        })\n        getBmiValue(0)\n    }\n\n    const metricBmi = (height, weight) => {\n        if(height > 0 && weight > 0) {\n            const bmi = (weight / height / height) * 10000\n            // console.log(bmi)\n            getBmiValue(Math.round(bmi))\n        }\n    }\n\n    useEffect(() => {\n        // akan menghitung bmi dari tinggi dan berat melalui method\n        // metricBmi(123, 123)\n        metricBmi(heightCount, weightCount)\n    }, [heightCount, weightCount])\n\n    return (\n        <div className=\"card-body\">\n            <BmiForm \n                title={`Height (cm)`}\n                type='number'\n                name='heightCount'\n                value={heightCount}\n                onChange={onChangeInput}\n                />\n            <BmiForm \n                title={`Weight (kg)`}\n                type='number'\n                name='weightCount'\n                value={weightCount}\n                onChange={onChangeInput}\n                />\n            <button \n                onClick={resetForm}\n                className=\"btn btn-sm btn-primary\">Reset</button>\n        </div>\n    )\n}\n\nexport default BmiCalculator\n"]},"metadata":{},"sourceType":"module"}